"use strict";(self.webpackChunkRAMN_docs=self.webpackChunkRAMN_docs||[]).push([["799"],{1175:function(n,s,i){i.r(s),i.d(s,{default:()=>d});var e=i(5893),r=i(65);function c(n){let s=Object.assign({h1:"h1",a:"a",p:"p",code:"code",ul:"ul",li:"li",strong:"strong"},(0,r.ah)(),n.components);return(0,e.jsxs)(e.Fragment,{children:[(0,e.jsxs)(s.h1,{id:"配置-ramn-的脚本",children:[(0,e.jsx)(s.a,{className:"header-anchor","aria-hidden":"true",href:"#配置-ramn-的脚本",children:"#"}),"配置 RAMN 的脚本"]}),"\n",(0,e.jsxs)(s.p,{children:["请按照 ",(0,e.jsx)(s.a,{href:"/docs/hardware/flashing.html#%E5%88%B7%E5%86%99%E8%84%9A%E6%9C%AC",children:"刷写脚本 "}),"中的步骤安装 RAMN 的脚本。"]}),"\n",(0,e.jsxs)(s.p,{children:["您可以在以下设置中进行修改：",(0,e.jsx)(s.code,{children:"scripts/settings/windows.ini"}),"（使用 Windows 时）和 ",(0,e.jsx)(s.code,{children:"scripts/settings/linux.ini"}),"（使用 Linux 时）："]}),"\n",(0,e.jsxs)(s.ul,{children:["\n",(0,e.jsxs)(s.li,{children:[(0,e.jsx)(s.strong,{children:"PORT"})," 指定脚本使用的串口名称（例如 COM1 或 /dev/ttyACM0）。您可以使用“AUTODETECT”让脚本自动查找 RAMN 端口。"]}),"\n",(0,e.jsxs)(s.li,{children:[(0,e.jsx)(s.strong,{children:"ECUx_FIRMWARE_PATH"})," 指定用于重新编程或验证 ECU 固件的固件文件。"]}),"\n",(0,e.jsxs)(s.li,{children:[(0,e.jsx)(s.strong,{children:"VERBOSE"})," 指定脚本的详细程度（0 表示仅输出错误，4 表示输出所有内容，包括调试信息）。"]}),"\n",(0,e.jsxs)(s.li,{children:[(0,e.jsx)(s.strong,{children:"TIMEOUT"})," 指定从串口读取数据的超时值。"]}),"\n",(0,e.jsxs)(s.li,{children:[(0,e.jsx)(s.strong,{children:"CAN_NAME"})," 指定依赖 CAN 而非串口的脚本的 ",(0,e.jsx)(s.strong,{children:"通道"}),"名称。"]}),"\n",(0,e.jsxs)(s.li,{children:[(0,e.jsx)(s.strong,{children:"CAN_TYPE"})," 指定上述 ",(0,e.jsx)(s.strong,{children:"接口类型"}),"的名称。"]}),"\n",(0,e.jsxs)(s.li,{children:[(0,e.jsx)(s.strong,{children:"CAN_REFRESH_RATE"})," 指定脚本更新 CAN 总线的频率（适用于使用 CAN 的脚本）。"]}),"\n",(0,e.jsxs)(s.li,{children:[(0,e.jsx)(s.strong,{children:"VCAND_HARDWARE_PORT"})," 是 ",(0,e.jsx)(s.a,{href:"/docs/scripts/vcand.html#vcand",children:"vcand"})," 脚本使用的默认硬件端口。"]}),"\n"]})]})}function l(){let n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},{wrapper:s}=Object.assign({},(0,r.ah)(),n.components);return s?(0,e.jsx)(s,Object.assign({},n,{children:(0,e.jsx)(c,n)})):c(n)}let d=l;l.__RSPRESS_PAGE_META={},l.__RSPRESS_PAGE_META["docs%2Fscripts%2Finstall.mdx"]={toc:[],title:"配置 RAMN 的脚本",headingTitle:"配置 RAMN 的脚本",frontmatter:{}}}}]);